name: Rust CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly
  TOOLCHAIN_PROFILE: minimal
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  lints:
    name: Run cargo fmt and cargo clippy
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy
          override: true
      - name: Install dependencies
        run: |
          pip install --user pre-commit
          sudo apt install -y libgtk-3-dev
          sudo apt install -y libgtk-4-dev
          sudo apt install -y libadwaita-1-dev
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features
          #-- -D warnings
  build-linux:
    name: Build for linux using cargo
    runs-on: ubuntu-22.04
    needs: [lints]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Install dependencies
        run: |
          pip install --user pre-commit
          sudo apt install -y libgtk-3-dev
          sudo apt install -y libgtk-4-dev
          sudo apt install -y libadwaita-1-dev
      - name: Run Build for Linux
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target x86_64-unknown-linux-gnu
  test:
    name: Run cargo test
    runs-on: ubuntu-22.04
    needs: [build-linux]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Install dependencies
        run: |
          pip install --user pre-commit
          sudo apt install -y libgtk-3-dev
          sudo apt install -y libgtk-4-dev
          sudo apt install -y libadwaita-1-dev
      - name: Run cargo test -no-run
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run --verbose
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
  coverage:
    name: Attempt to generate code coverage
    runs-on: ubuntu-22.04
    needs: [test]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: llvm-tools-preview
          override: true
      - name: Install dependencies
        run: |
          pip install --user pre-commit
          sudo apt install -y libgtk-3-dev
          sudo apt install -y libgtk-4-dev
          sudo apt install -y libadwaita-1-dev
      - name: Generate coverage
        # runs cargo with defaults flags, using the default `lcov` output
        uses: Swatinem/fucov@v1
      - name: Upload coverage
        uses: codecov/codecov-action@v3.1.1
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          directory: coverage
